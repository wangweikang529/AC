#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>

using namespace std;

typedef unsigned long long ull;
const int mas=1e6+5;
const int p=131;
ull ha[mas*2],T[mas*2],c[2*mas];
char v[mas*2];
int len,n,cnt;

bool check(ull x)
{
    int l=1,r=len;
    if(l==r&&ha[l]==x)return 1;
    else if(l==r&&ha[l]!=x)return 0;
    while(l<r)
    {
        int mid=l+r>>1;
        if(ha[mid]>=x)r=mid;
        else l=mid+1;
    }
    if(ha[r]==x)return 1;
    return 0;
}

int main()
{
        
      cin>>v+1;
    len=strlen(v+1);
    
    
     c[0]=1;
    for(int i=1;i<=2*len;i++)//2倍的len，不是一倍的len
        c[i]=c[i-1]*p;//一倍也可以，因为只用到了c[len]
        
    
    for(int i=1;i<=len;i++)
        v[len+i]=v[i];//环化成链
    
     for(int i=1;i<=2*len;i++)
         T[i]=T[i-1]*p+v[i]-'a'+1;
         //c[i]*=p;    问题 
    
    for(int i=1;i<=len;i++)
        ha[i]=T[i+len-1]-T[i-1]*c[len];
    
     sort(ha+1,ha+len+1); //不是n是len n等于0； 
     
   //  for(int i=1;i<=len;i++)
    // cout<<ha[i]<<endl;
    //cout<<endl;
    
    scanf("%d",&n);
    while(n--)
    {
        cnt=0;
        scanf("%s",v+1);
        for(int i=1;i<=strlen(v+1);i++)
            T[i]=T[i-1]*p+v[i]-'a'+1;
        for(int i=1;i+len-1<=strlen(v+1);i++)
        {
            ull u=T[i+len-1]-T[i-1]*c[len];
            
                if(check(u))cnt++;
        }
        
        cout<<cnt<<endl;
            
    }
    return 0;

}
