#include<iostream>
#include<cstdio>
#include<vector>
#include<cstring>
#include<queue>
 #include<algorithm>
 
using namespace std;

const int mas=1e5+5;
vector<int>G[mas];
int vis[mas],n,m;


void dfs(int x)
{
	if(vis[x])return;
	vis[x]=1;
	cout<<x<<" ";
	
	for(int i=0;i<G[x].size();i++) 
		if(!vis[G[x][i]])dfs(G[x][i]);
		//注意这里是vis[G[x][i]]状态 
}//借助里递归 
void bfs(int x)
{
	queue<int>q;
    vis[x]=1;
    q.push(x);
    while(!q.empty())
	{
		int c=q.front();
		cout<<q.front()<<" ";
		q.pop();
		for(int i=0;i<G[c].size();i++)
			if(!vis[G[c][i]])
			{
				q.push(G[c][i]);
				vis[G[c][i]]=1;
			}	
	}
}//借助了栈 ,没有递归 
int main()
{
	scanf("%d%d",&n,&m);
	for(int i=1;i<=m;i++)
	{
		int x,y;
		scanf("%d%d",&x,&y);
		G[x].push_back(y);
		
	} 
	for(int i=1;i<=n;i++)
	sort(G[i].begin(),G[i].end());//要求序号从小到大
	dfs(1);
   cout<<endl;
   for(int i=0;i<mas;i++)
   vis[i]=0;
   
    bfs(1);
    
	return 0;
}

 
 
