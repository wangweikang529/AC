#include<iostream>
#include<cstdio>
#include<vector>
#include<cstring>
#include<queue>
 #include<algorithm>
using namespace std;

const int mas=30;
bool vis[mas][mas];
const int dx[9]={0,1,1,-1,-1,2,2,-2,-2};
const int dy[9]={0,2,-2,2,-2,1,-1,1,-1};
long long res[mas][mas];
//因为如果从0开始的话，-2存在越界的问题，所有的点都加2
 
int x,y,a,b;

void f(int x,int y)
{
	for(int i=0;i<9;i++)
	vis[x+dx[i]][y+dy[i]]=1;
	
	return;
}

int main()
{
   scanf("%d%d%d%d",&x,&y,&a,&b);
   x+=2,y+=2,a+=2,b+=2;
   f(a,b);
   //res[2][2]=0;
   //res[2][3]=1;
   //res[3][2]=1;
   res[1][2]=1; 
   
   //先给他们赋予初值，而且以后不能够再被重新赋值 
   for(int i=2;i<=x;i++)
       for(int j=2;j<=y;j++)
       {
	   	if(vis[i][j])continue;
		   res[i][j]=res[i-1][j]+res[i][j-1]；	
	     }
   
   cout<<res[x][y];
	return 0;
}



/*#include<iostream>
#include<cstdio>
#include<vector>
#include<cstring>
#include<queue>
 #include<algorithm>
using namespace std;

const int mas=25;
bool vis[mas][mas];
int net[8][2]={-1,-2,-1,2,1,-2,1,2,-2,1,-2,-1,2,-1,2,1};
long long res;

int a,b,x,y;
void f(int x,int y)
{
	vis[x][y]=1;
	for(int i=0;i<8;i++)
	{
		if(x+net[i][0]<0||x+net[i][0]>a||y+net[i][1]<0||y+net[i][1]>b);
		else vis[x+net[i][0]][y+net[i][1]]=1;//注意这里判断段错误 
	}
		
		
}
void dfs(int c,int d)
{
	if(c==a&&d==b)
	{
		res++; 
		return;
	}
	if(c>a||d>b)return;
	if(vis[c][d]==1)return;
	
	dfs(c+1,d);
	dfs(c,d+1);
	

}
int main()
{
   scanf("%d%d%d%d",&a,&b,&x,&y);
   f(x,y);
   dfs(0,0);
   cout<<res;
	return 0;
}

 
 */ 
 

 
 
